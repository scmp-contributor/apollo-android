apply plugin: 'antlr'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

targetCompatibility = JavaVersion.VERSION_1_7
sourceCompatibility = JavaVersion.VERSION_1_7

sourceSets {
  // As temporary solution enable this to verify if generated kotlin test fixtures compiles
//  test {
//    java {
//      srcDir "src/test/graphql"
//      exclude '**/*.java'
//    }
//  }
}

dependencies {
  antlr dep.antlr.antlr
  compile dep.antlr.runtime
  implementation dep.kotlin.stdLib
  implementation dep.moshi.adapters
  implementation dep.moshi.kotlin
  implementation dep.moshi.moshi
  implementation dep.poet.java
  implementation dep.poet.kotlin
  implementation project(":apollo-api")

  kapt dep.moshi.kotlinCodegen

  testImplementation dep.compiletesting
  testImplementation dep.junit
  testImplementation dep.truth
}

compileKotlin.dependsOn generateGrammarSource

task pluginVersion {
  def outputDir = file("src/generated/kotlin")

  inputs.property 'version', version
  outputs.dir outputDir

  doLast {
    def versionFile = file("$outputDir/com/apollographql/android/Version.kt")
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package com.apollographql.android
val VERSION = "${project.version}"
"""
  }
}

tasks.getByName('compileKotlin').dependsOn('pluginVersion')

tasks.withType(Checkstyle) {
    exclude '**com/apollographql/apollo/compiler/parser/antlr/**'
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
apply from: rootProject.file('gradle/bintray.gradle')
